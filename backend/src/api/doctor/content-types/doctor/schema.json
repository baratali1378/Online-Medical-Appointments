{
  "kind": "collectionType",
  "collectionName": "doctors",
  "info": {
    "singularName": "doctor",
    "pluralName": "doctors",
    "displayName": "Doctor",
    "description": ""
  },
  "options": {
    "draftAndPublish": false
  },
  "pluginOptions": {},
  "attributes": {
    "biography": {
      "type": "text"
    },
    "experience": {
      "type": "string",
      "required": true
    },
    "rating": {
      "type": "decimal"
    },
    "reviewCount": {
      "type": "integer",
      "default": 0
    },
    "appointments": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::appointment.appointment",
      "mappedBy": "doctor"
    },
    "reviews": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::review.review",
      "mappedBy": "doctor"
    },
    "specialties": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::specialty.specialty",
      "inversedBy": "doctors"
    },
    "city": {
      "type": "relation",
      "relation": "manyToOne",
      "target": "api::city.city",
      "inversedBy": "doctors"
    },
    "personal_info": {
      "type": "component",
      "repeatable": false,
      "component": "personal-info.personal-info"
    },
    "password": {
      "type": "password",
      "required": true,
      "private": true
    },
    "security": {
      "type": "component",
      "repeatable": false,
      "component": "systems.security-fields"
    },
    "verification": {
      "type": "component",
      "repeatable": true,
      "component": "doctors.document-verification"
    },
    "medical_records": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::medical-record.medical-record",
      "mappedBy": "doctor"
    },
    "clinic_info": {
      "displayName": "Clinic Information",
      "type": "component",
      "repeatable": false,
      "component": "contact.clinic-information"
    },
    "notifications": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::notification.notification",
      "mappedBy": "doctor"
    },
    "available_slots": {
      "type": "relation",
      "relation": "oneToMany",
      "target": "api::available-slot.available-slot",
      "mappedBy": "doctor"
    },
    "patients": {
      "type": "relation",
      "relation": "manyToMany",
      "target": "api::patient.patient",
      "inversedBy": "doctors"
    }
  }
}
