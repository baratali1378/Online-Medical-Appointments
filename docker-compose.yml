version: "3.8"

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: mysql_container
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: medical_appointments
      MYSQL_USER: strapi_admin
      MYSQL_PASSWORD: admin
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  # RabbitMQ Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq_container
    restart: always
    ports:
      - "5672:5672" # AMQP protocol
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  # Redis (Cache & Session Store)
  redis:
    image: redis:7
    container_name: redis_container
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

  # Next.js Frontend
  nextjs:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: nextjs_container
    ports:
      - "3000:3000"
    depends_on:
      - strapi
    restart: always

  # Strapi Backend
  strapi:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: strapi_container
    environment:
      DATABASE_CLIENT: mysql
      DATABASE_HOST: mysql
      DATABASE_PORT: 3306
      DATABASE_NAME: medical_appointments
      DATABASE_USERNAME: strapi_admin
      DATABASE_PASSWORD: admin
      NODE_ENV: production
    ports:
      - "1337:1337"
    depends_on:
      - mysql
    restart: always

  # Email Service (Python)
  email_service:
    build:
      context: ./microservice/email_service
      dockerfile: Dockerfile
    container_name: email_service_container
    depends_on:
      - rabbitmq
    restart: always

volumes:
  mysql_data:
  rabbitmq_data:
  redis_data:
